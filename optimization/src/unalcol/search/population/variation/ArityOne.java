package unalcol.search.population.variation;

import unalcol.types.collection.vector.*;

/**
 * <p>Title:ArityOne</p>
 * <p>Description: A unary operator</p>
 * <p>Copyright:    Copyright (c) 2010</p>
 * @author Jonatan Gomez
 * @version 1.0
 */

public abstract class ArityOne<T> extends PopulationVariation<T> {

  /**
   * Apply the unary genetic operator over the individual
   * @param x Individual to be modified by the genetic operator
   * @return extra information of the genetic operator
   */
  public abstract T get(T x);

  /**
   * Apply the unary genetic operator over the individual
   * @param x Individual to be modified by the genetic operator
   * @return extra information of the genetic operator
   */
  public Vector<T> apply(T x){
      Vector<T> v = new Vector<T>();
      v.add(get(x));
      return v;
  }

  /**
   * Apply the genetic operator to the first individual in the population of parents
   * This method is parent compatible
   * @param parents Collection of parents used by the genetic operator (selects just the first
   * one in the collection
   * @return A collection of individuals generated by the gentic operator
   */
  @Override
  public Vector<T> apply( Vector<T> parents ){
      return apply(parents.get(0));
  }

  /**
   * Return the genetic operator arity
   * @return the genetic operator arity
   */
  @Override
  public int arity() { return 1; }
}
